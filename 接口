接口使用interfacel来定义
java中，接口和类是并列的两个结构
如何定义接口：定义接口中的成员

    JDK7及以前：只能定义全局常量和抽象方法
      >全局常量：public static final的.但是书写时，可以省略不写
      >抽象方法：public abstract的
    JDK8：除了定义全局常量和抽象方法之外，还可以定义静态方法、默认方法

接口中不能定义构造器，意味着接口不能实例化

java开发中，接口通过让类去实现(implements)的方式来使用：
  如果实现类覆盖了接口中的所有抽象方法，则此实现类就可以实例化
  如果实现类没覆盖接口中所有的抽象方法，则此实现类仍为一个抽象类
  
java类可以实现多个接口 ，弥补了java单继承性的局限性
格式：class AA extends BB implements CC,DD,EE

接口与接口之间可以继承，而且可以多继承
接口的具体使用 体现多态性
接口实际上可以看做是一种规范

Java8中关于接口的新规范：
1.接口中定义的静态方法，只能通过接口来调用
2.通过实现类的对象，可以调用接口中的默认方法(如果实现类重写了接口中的默认方法，调用时，仍然调用的是重写以后的方法)
3.如果子类(或实现类)继承的父类和实现的借口镇声明了同名同参数的默认方法，那么子类在没重写此方法的情况下，默认调用的是父类中的同名方法
4.如果实现类实现了多个接口，而这多个接口中定义了同名同参数的默认方法，那么在实现类没重写此方法的情况下，报错-->接口冲突
