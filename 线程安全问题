方式一：同步代码块
synchronized(同步监视器){
  需要被同步的代码
}
//操作共享数据的代码，即为需要被同步的代码
//共享数据：多个线程共同操作的数据
//同步监视器：俗称锁。任何一个类的对象都可以充当锁
//要求：多个线程必须共用同一把锁

方法二：同步方法
如果操作共享数据的代码完整地声明在一个方法中，我们不妨将此方法声明为同步的
同步方法仍然需要同步监视器，只是不显示的声明。
对于非静态的同步方法，锁是this，
静态的同步方法，锁是当前类本身

同步方法可以解决线程的安全问题，同步代码时可以有一个线程参与，类似一个单线程的过程
注：在继承thread类时，慎用this
